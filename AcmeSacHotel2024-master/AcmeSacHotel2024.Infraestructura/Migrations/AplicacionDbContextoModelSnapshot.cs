// <auto-generated />
using System;
using AcmeSacHotel2024.Infraestructura.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AcmeSacHotel2024.Infraestructura.Migrations
{
    [DbContext(typeof(AplicacionDbContexto))]
    partial class AplicacionDbContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.6.23329.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AcmeSacHotel2024.Dominio.Entidades.HotelAcme", b =>
                {
                    b.Property<int>("HotelAcmeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelAcmeId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("cap_hotel")
                        .HasColumnType("int");

                    b.Property<string>("des_hotel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("img_hotel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("m2_hotel")
                        .HasColumnType("int");

                    b.Property<string>("nom_hotel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("pre_hotel")
                        .HasColumnType("float");

                    b.HasKey("HotelAcmeId");

                    b.ToTable("hotelAcmes");

                    b.HasData(
                        new
                        {
                            HotelAcmeId = 1,
                            cap_hotel = 4,
                            des_hotel = "Aquí va la descripción breve de los servicios  que brinda el hotel",
                            img_hotel = "https://placehold.co/600x400",
                            m2_hotel = 250,
                            nom_hotel = "Nombre hotel 1",
                            pre_hotel = 150.0
                        },
                        new
                        {
                            HotelAcmeId = 2,
                            cap_hotel = 3,
                            des_hotel = "Aquí va la descripción breve de los servicios  que brinda el hotel",
                            img_hotel = "https://placehold.co/600x400",
                            m2_hotel = 50,
                            nom_hotel = "Nombre hotel 2",
                            pre_hotel = 50.0
                        },
                        new
                        {
                            HotelAcmeId = 3,
                            cap_hotel = 14,
                            des_hotel = "Aquí va la descripción breve de los servicios  que brinda el hotel",
                            img_hotel = "https://placehold.co/600x400",
                            m2_hotel = 450,
                            nom_hotel = "Nombre hotel 3",
                            pre_hotel = 450.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
